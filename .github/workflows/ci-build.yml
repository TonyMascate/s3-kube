name: CI - Test, Build & Push

# permission nÃ©cessaire pour que GITHUB_TOKEN puisse pousser dans GHCR
permissions:
  contents: read
  packages: write

on:
  push:
    branches: ["main"]
    tags: ["v*"]
  pull_request:
    branches: ["main"]

jobs:
  test:
    name: Run tests (start MinIO via docker-compose)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Docker Compose
        uses: docker/setup-compose-action@v1

      - name: Start services with docker-compose
        run: docker compose -f docker-compose.yml up -d

      # - name: Wait for MinIO ready
      #   run: |
      #     for i in $(seq 1 60); do
      #       if curl --fail http://localhost:9000/minio/health/ready >/dev/null 2>&1; then
      #         echo "MinIO ready"
      #         exit 0
      #       fi
      #       echo "Waiting for MinIO... ($i/60)"
      #       sleep 2
      #     done
      #     echo "MinIO not ready after 60s" >&2
      #     exit 1

      - name: Run go tests
        run: |
          go test ./... -v
        env:
          MINIO_ENDPOINT: "localhost:9000"
          MINIO_ACCESS_KEY: "minioadmin"
          MINIO_SECRET_KEY: "miniopassword"

      - name: Stop services (cleanup)
        if: always()
        run: docker compose -f docker-compose.yml down --volumes --remove-orphans

  build-and-push:
    name: Build and push Docker image to GHCR
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry (GHCR)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ghcr.io/tonymascate/mys3:latest
            ghcr.io/tonymascate/mys3:${{ github.sha }}

      - name: Show pushed image
        run: echo "Pushed ghcr.io/${{ github.repository_owner }}/mys3:${{ github.sha }}"
  deploy-to-k8s:
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBECONFIG_DATA }}" > $HOME/.kube/config

      - name: Set image for deployment
        run: |
          kubectl set image deployment/mys3-deployment mys3=ghcr.io/tonymascate/mys3:${{ github.sha }}

      - name: Apply Kubernetes manifests
        run: |
          kubectl apply -f k8s/minio-deployment.yaml
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/minio-service.yaml
          kubectl apply -f k8s/service.yaml

      - name: Verify deployment rollout
        run: |
          kubectl rollout status deployment/mys3-deployment
